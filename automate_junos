jrpc
netconfig

openconfig yang model

pip install ncclient
pip install junos-eznc
ansible-galaxy install Juniper.junos

pip install junos-netconify # to speack directly to juniper dev over console


# On juniper device
set system services netconf ssh


junos_get_facts
jun0os_install_config
junos_install_os
junos_shutdown
junos_zeroize. - reset junos device



# Deply ntp to all junos servers
set system ntp server 66.222.54.198

if using set command config file needs to be *.set

cat set-ntp.yml
---
- hosts: lab_juniper_ro
  roles:
  - Juniper.junos
  connection: local
  gather_facts: now

  - name: Deploy Ansilbe User
    junos_install_config
      host={{inventory_hostname}}
      user=aaron.paxson
      file=resources/config-user.set
      overwrite=false
      logfile=logs/deploy-user.log



 cat resources/config-user.set
 set system ntp server 66.222.54.198


ansible-playbook set-ntp.yml


#################################################3
# Juniper port mirroring
github.com/jeremyschulman/NCE




## Python Netmiko library

cat commandTest.py
#!/usr/bin/env python
from __future__ import print_function, unicode_literals
from netmiko import ConnectHandler

lax_tar_r1 = {
    'device_type':'juniper',
    'ip':'127.0.0.1',
    'port':'2200',
    'username':'akif',
    'password':'Akif999',
    'verbose':True,
}

# Connect to device with given arguments in lax_tar_r1
net_connect = ConnectHandler(**lax_tar_r1)

net_connect.enable()
config_commands = [
    'set system host-name vsrx1',
    'commit',
]

output = net_connect.send_config_set(config_commands)
print(output)

#################################################

cat tor_inventory.py
devices = [ 
{'vsrx1':{
    'device_type':'juniper',
    'ip':'127.0.0.1',
    'port':'1222',
    'username':'akif',
    'password':'Akif999',
    'verbose':True,
}},
{'vsrx2':{
    'device_type':'juniper',
    'ip':'127.0.0.1',
    'port':'2122',
    'username':'akif',
    'password':'Akif999',
    'verbose':True,
}},
{'vsrx3':{
    'device_type':'juniper',
    'ip':'127.0.0.1',
    'port':'3122',
    'username':'akif',
    'password':'Akif999',
    'verbose':True,
}},
{'vsrx4':{
    'device_type':'juniper',
    'ip':'127.0.0.1',
    'port':'4122',
    'username':'akif',
    'password':'Akif999',
    'verbose':True,
}},



- name: load configure file into device
  junos_config:
    src: srx.cfg
    comment: update config
    provider: "{{ netconf }}"

 
ansible-vault encrypt host_vars/vsxr1 host_vars/vsxr2
# create password

ansible-vault edit host_vars/vsxr1
# provide password

ansible-playbook --ask-vault-pass ansible_playbook.yaml
# provide password

# if want to have the files again unencrited
ansible-vault decrypt host_vars/vsxr1 host_vars/vsxr2
# Provide password and the files are decripted agian

## We can encrit only the password in the file
ansible-vault encrypt_string
# Create password
# then put the password tha will be encrypted and used to send to remote
# Folow the example bellow

root@cache-server:/home/vagrant/Ansible# ansible-vault encrypt_string
New Vault password: 
Confirm New Vault password: 
Reading plaintext input from stdin. (ctrl-d to end input)    # Type the password and Ctl+d (no Enter!!!!)
Akif999!vault |
          $ANSIBLE_VAULT;1.1;AES256
          30356162613532666365393366393630666536393831373739353333643166613664613934303261
          3566333863353735383131353339343036663732613637610a353530336134646361303335633437
          37386134646635386133306130303533376534393431356463363466323430633831636565336336
          3032306266393834630a313238356530333232343662636636363038393339343432393333626638
          3637
Encryption successful
root@cache-server:/home/vagrant/Ansible# 

Copy the part starting form !valt... and put the encripted password in vars file

ansible_ssh_pass: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          30356162613532666365393366393630666536393831373739353333643166613664613934303261
          3566333863353735383131353339343036663732613637610a353530336134646361303335633437
          37386134646635386133306130303533376534393431356463363466323430633831636565336336
          3032306266393834630a313238356530333232343662636636363038393339343432393333626638
          3637

## To run the playbook use --ask-vault-pass  
ansible-playbook --ask-vault-pass my-playbook.yaml


github.com/PacktPublishing/Mastering-Python-Networking
